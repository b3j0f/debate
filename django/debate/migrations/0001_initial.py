# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-08 11:21
from __future__ import unicode_literals

import address.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('address', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('address', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='address.Address')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ContactElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ForbiddenEmail',
            fields=[
                ('email', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('url', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Scheduling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True)),
                ('mduration', models.IntegerField(blank=True, default=60)),
            ],
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('date', models.DateField(default=datetime.date.today, primary_key=True, serialize=False)),
                ('accounts', models.IntegerField(default=0)),
                ('debates', models.IntegerField(default=0)),
                ('organizations', models.IntegerField(default=0)),
                ('votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('account', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='debate.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Debate',
            fields=[
                ('contactelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='debate.ContactElement')),
            ],
            bases=('debate.contactelement',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('contactelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='debate.ContactElement')),
                ('lon', models.FloatField(blank=True)),
                ('lat', models.FloatField(blank=True)),
                ('address', address.models.AddressField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='address.Address')),
            ],
            bases=('debate.contactelement',),
        ),
        migrations.AddField(
            model_name='contactelement',
            name='contacts',
            field=models.ManyToManyField(blank=True, related_name='debates', to='debate.Account'),
        ),
        migrations.AddField(
            model_name='contactelement',
            name='medias',
            field=models.ManyToManyField(blank=True, default=[], related_name='_contactelement_medias_+', to='debate.Media'),
        ),
        migrations.AddField(
            model_name='account',
            name='avatar',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='debate.Media'),
        ),
        migrations.AddField(
            model_name='account',
            name='languages',
            field=models.ManyToManyField(blank=True, default=[], related_name='_account_languages_+', to='address.Country'),
        ),
        migrations.AddField(
            model_name='vote',
            name='debate',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='debate.Debate'),
        ),
        migrations.AddField(
            model_name='scheduling',
            name='debate',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='debate.Debate'),
        ),
        migrations.AddField(
            model_name='scheduling',
            name='organization',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedulings', to='debate.Organization'),
        ),
        migrations.AddField(
            model_name='category',
            name='debates',
            field=models.ManyToManyField(blank=True, default=[], to='debate.Debate'),
        ),
        migrations.AddField(
            model_name='category',
            name='organizations',
            field=models.ManyToManyField(blank=True, default=[], to='debate.Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('account', 'debate')]),
        ),
    ]
